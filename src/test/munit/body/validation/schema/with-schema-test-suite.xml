<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
  xmlns="http://www.mulesoft.org/schema/mule/core"
  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

  <munit:config name="with-schema-test-suite">
    <munit:parameterizations>
      <munit:parameterization name="RAML">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="RAML10"/>
          <munit:parameter propertyName="parser.type" value="RAML"/>
          <munit:parameter propertyName="api.location" value="munit/body/schema/raml-10-with-schema.raml"/>
        </munit:parameters>
      </munit:parameterization>
      <munit:parameterization name="AMF-RAML10">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="RAML10"/>
          <munit:parameter propertyName="parser.type" value="AMF"/>
          <munit:parameter propertyName="api.location" value="munit/body/schema/raml-10-with-schema.raml"/>
        </munit:parameters>
      </munit:parameterization>
      <munit:parameterization name="AMF-OAS30">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="OAS30"/>
          <munit:parameter propertyName="parser.type" value="AMF"/>
          <munit:parameter propertyName="api.location" value="munit/body/schema/oas-30-with-schema.json"/>
        </munit:parameters>
      </munit:parameterization>
    </munit:parameterizations>
  </munit:config>

  <munit:test name="put-valid-json">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="put:\schema10user:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="PUT" config-ref="http-requester-simple" path="/with-schema/schema10user">
        <http:body>#['{"username":"gbs","firstName":"george","lastName":"bernard shaw","emailAddresses":["gbs@ie"]}']
        </http:body>
        <http:headers>#[{'Content-Type': 'application/json'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]"/>
      <munit-tools:assert-that expression="#[output text/plain --- payload]" is="#[MunitTools::equalTo('hello')]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="put-invalid-json">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="put:\schema10user:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="PUT" config-ref="http-requester-simple" path="/with-schema/schema10user">
        <http:body>#['{"username":"gbs","firstName":"george","lastName":"bernard shaw"}']</http:body>
        <http:headers>#[{'Content-Type': 'application/json'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="put-valid-xml">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="put:\schema10user:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="PUT" config-ref="http-requester-simple" path="/with-schema/schema10user">
        <http:body><![CDATA[#[
          '<user xmlns="http://mulesoft.org/schemas/sample" username="gbs" firstName="george" lastName="bernard shaw">
            <email-addresses>
              <email-address>gbs@ie</email-address>
            </email-addresses>
           </user>'
           ]]]>
        </http:body>
        <http:headers>#[{'Content-Type': 'text/xml'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]"/>
      <munit-tools:assert-that expression="#[output text/plain --- payload]" is="#[MunitTools::equalTo('hello')]"/>
    </munit:validation>
  </munit:test>

  <!-- min occurrences of array elements does not seem to be forced by OAS -->
  <munit:test name="put-invalid-xml-array" ignore="#['${api.version}' == 'OAS30']">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="put:\schema10user:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="PUT" config-ref="http-requester-simple" path="/with-schema/schema10user">
        <http:body><![CDATA[#[
          '<user xmlns="http://mulesoft.org/schemas/sample" username="gbs" firstName="george" lastName="bernard shaw">
            <email-addresses>
            </email-addresses>
           </user>'
           ]]]>
        </http:body>
        <http:headers>#[{'Content-Type': 'text/xml'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="put-invalid-xml">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="put:\schema10user:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="PUT" config-ref="http-requester-simple" path="/with-schema/schema10user">
        <http:body><![CDATA[#[
          '<user xmlns="http://mulesoft.org/schemas/sample" username="gbs" firstName="george" lastName="bernard shaw">

           </user>'
           ]]]>
        </http:body>
        <http:headers>#[{'Content-Type': 'text/xml'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="post-valid-json-using-raml-type">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="post:\ramluser:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="POST" config-ref="http-requester-simple" path="/with-schema/ramluser">
        <http:body>#['{"firstname":"george","lastname":"bernard shaw","age":30}']</http:body>
        <http:headers>#[{'Content-Type': 'application/json'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
      <munit-tools:assert-that expression="#[output text/plain --- payload]" is="#[MunitTools::equalTo('hello')]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="post-invalid-json-using-raml-type-missing-required-param">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="with-schema-main"/>
      <munit:enable-flow-source value="post:\ramluser:with-schema-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="POST" config-ref="http-requester-simple" path="/with-schema/ramluser">
        <http:body>#['{"firstname":"george","age":"30"}']</http:body>
        <http:headers>#[{'Content-Type': 'application/json'}]</http:headers>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

</mule>
