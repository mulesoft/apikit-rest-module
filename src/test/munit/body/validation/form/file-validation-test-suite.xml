<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd

    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

  <munit:config name="file-validation-test-suite">
    <munit:parameterizations>
      <munit:parameterization name="RAML">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="RAML10"/>
          <munit:parameter propertyName="parser.type" value="RAML"/>
          <munit:parameter propertyName="api.location" value="munit/body/form/raml-10-file-validation-api.raml"/>
        </munit:parameters>
      </munit:parameterization>
      <munit:parameterization name="AMF-RAML10">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="RAML10"/>
          <munit:parameter propertyName="parser.type" value="AMF"/>
          <munit:parameter propertyName="api.location" value="munit/body/form/raml-10-file-validation-api.raml"/>
        </munit:parameters>
      </munit:parameterization>
      <munit:parameterization name="AMF-OAS30">
        <munit:parameters>
          <munit:parameter propertyName="api.version" value="OAS30"/>
          <munit:parameter propertyName="parser.type" value="AMF"/>
          <munit:parameter propertyName="api.location" value="munit/body/form/oas-30-file-validation-api.json"/>
        </munit:parameters>
      </munit:parameterization>
    </munit:parameterizations>
  </munit:config>

  <munit:test name="post-jpg-image-file">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="file-validation-main"/>
      <munit:enable-flow-source value="post:\documents:multipart\form-data:file-validation-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <set-payload value="#[readUrl('classpath://munit/body/form/bbva.jpg', 'application/octet-stream')]"/>
      <http:request method="POST" config-ref="http-requester-simple" path="/file-validation/documents">
        <http:body>#[
          %dw 2.0
          output multipart/form-data boundary="test"
          ---
          {
          parts: {
          file: {
          headers: {
          'Content-Disposition': 'form-data; name="first"; filename="bbva.jpeg"',
          'Content-Type': 'image/jpeg'
          },
          content: payload
          }
          }
          }]
        </http:body>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="post-image-file-with-invalid-content-type">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="file-validation-main"/>
      <munit:enable-flow-source value="post:\documents:multipart\form-data:file-validation-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <set-payload value="#[readUrl('classpath://munit/body/form/bbva.jpg', 'application/octet-stream')]"/>
      <http:request method="POST" config-ref="http-requester-simple" path="/file-validation/documents">
        <http:body>#[
          %dw 2.0
          output multipart/form-data boundary="test"
          ---
          {
          parts: {
          file: {
          headers: {
          'Content-Disposition': 'form-data; name="first"; filename="bbva.jpeg"',
          'Content-Type': 'application/octet-stream'
          },
          content: payload
          }
          }
          }]
        </http:body>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

  <!--  Size validation not supported by OAS. -->
  <munit:test name="post-image-file-with-invalid-size" ignore="#['${api.version}' contains 'OAS']">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="file-validation-main"/>
      <munit:enable-flow-source value="post:\small-documents:multipart\form-data:file-validation-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <set-payload value="#[readUrl('classpath://munit/body/form/bbva.jpg', 'application/octet-stream')]"/>
      <http:request method="POST" config-ref="http-requester-simple" path="/file-validation/small-documents">
        <http:body>#[
          %dw 2.0
          output multipart/form-data boundary="test"
          ---
          {
          parts: {
          file: {
          headers: {
          'Content-Disposition': 'form-data; name="first"; filename="bbva.jpeg"',
          'Content-Type': 'image/jpeg'
          },
          content: payload
          }
          }
          }]
        </http:body>
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="any-file-type-allowed">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="file-validation-main"/>
      <munit:enable-flow-source value="post:\anyFileTypeAllowed:multipart\form-data:file-validation-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <set-payload value="#[readUrl('classpath://munit/body/form/bbva.jpg', 'application/octet-stream')]"/>
      <http:request method="POST" config-ref="http-requester-simple" path="/file-validation/anyFileTypeAllowed">
        <http:body>#[
          %dw 2.0
          output multipart/form-data boundary="test"
          ---
          {
          parts: {
          file: {
          headers: {
          'Content-Disposition': 'form-data; name="first"; filename="bbva.jpeg"',
          'Content-Type': 'image/jpeg'
          },
          content: payload
          }
          }
          }]
        </http:body>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
    </munit:validation>
  </munit:test>

</mule>
