<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
  xmlns="http://www.mulesoft.org/schema/mule/core"
  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

  <munit:config name="api-error-test-suite">
    <munit:parameterizations>
      <munit:parameterization name="RAML">
        <munit:parameters>
          <munit:parameter propertyName="parser.type" value="RAML"/>
        </munit:parameters>
      </munit:parameterization>
      <munit:parameterization name="AMF">
        <munit:parameters>
          <munit:parameter propertyName="parser.type" value="AMF"/>
        </munit:parameters>
      </munit:parameterization>
    </munit:parameterizations>
  </munit:config>

  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <munit:test name="error-on-subflow-propagates-to-main-flow" ignore="#[not Munit::muleVersionPriorTo('4.2.1')]">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="api-errors-main" />
      <munit:enable-flow-source value="get:\raiseError:api-errors-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="GET" config-ref="http-requester-simple" path="/errors/raiseError">
        <http:response-validator>
          <http:success-status-code-validator values="1..500"/>
        </http:response-validator>
      </http:request>
    </munit:execution>
    <munit:validation>
      <munit-tools:retrieve key="errorType"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('API:ERROR')]"/>
      <munit-tools:retrieve key="errorDescription"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('An error occurred.')]"/>
      <munit-tools:retrieve key="mainPayload"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Some Content')]"/>
    </munit:validation>
  </munit:test>

  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <!-- TODO: IGNORE UNTIL APIKIT-1943 is done -->
  <munit:test name="error-propagates-from-subflow" ignore="#[not Munit::muleVersionPriorTo('4.2.1')]">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="api-errors-main" />
      <munit:enable-flow-source value="get:\onErrorPropagate:api-errors-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="GET" config-ref="http-requester-simple" path="/errors/onErrorPropagate"/>
    </munit:execution>
    <munit:validation>
      <munit-tools:retrieve key="errorType"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('API:ERROR')]"/>
      <munit-tools:retrieve key="errorDescription"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('An error occurred.')]"/>
      <munit-tools:retrieve key="mainPayload"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Changing payload propagating error')]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="error-continues-on-handler-in-subflow">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="api-errors-main" />
      <munit:enable-flow-source value="get:\onErrorContinue:api-errors-config"/>
    </munit:enable-flow-sources>
    <munit:execution>
      <http:request method="GET" config-ref="http-requester-simple" path="/errors/onErrorContinue"/>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[output application/java --- payload]" is="#[MunitTools::equalTo('Content set in the sub flow error handler')]"/>
    </munit:validation>
  </munit:test>

  <munit:test name="error-mule-message-is-preserved-in-main-flow">
    <munit:enable-flow-sources>
      <munit:enable-flow-source value="api-errors-main" />
      <munit:enable-flow-source value="get:\errorWithMuleMessageIsBeingPropagated:api-errors-config"/>
    </munit:enable-flow-sources>
    <munit:behavior>
      <munit-tools:mock-when processor="set-payload">
        <munit-tools:then-return>
          <munit-tools:error cause="#[java!mtf::Utils::throwErrorMessageAwareException()]"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution>
      <http:request method="GET" config-ref="http-requester-simple" path="/errors/errorWithMuleMessageIsBeingPropagated"/>
    </munit:execution>
    <munit:validation>
      <munit-tools:retrieve key="errorPayload"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Payload value')]"/>
      <munit-tools:retrieve key="errorAttributes"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Attributes value')]"/>
      <munit-tools:retrieve key="errorDescription"/>
      <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('We are testing, everything is fine')]"/>
    </munit:validation>
  </munit:test>

</mule>
