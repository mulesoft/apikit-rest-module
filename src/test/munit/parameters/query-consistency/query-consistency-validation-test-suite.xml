<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	  xmlns="http://www.mulesoft.org/schema/mule/core"
	  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd

    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

	<munit:config name="query-consistent-test-suite">
		<munit:parameterizations>
			<munit:parameterization name="RAML">
				<munit:parameters>
					<munit:parameter propertyName="parser.type" value="RAML"/>
				</munit:parameters>
			</munit:parameterization>
			<munit:parameterization name="AMF">
				<munit:parameters>
					<munit:parameter propertyName="parser.type" value="AMF"/>
				</munit:parameters>
			</munit:parameterization>
		</munit:parameterizations>
	</munit:config>

	<munit:test name="query-params-default-values-passed-to-flow">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryParams:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple" path="/api/testQueryParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:retrieve key="q-params"/>
			<munit-tools:assert-that expression='#[payload.stringItemParam]'
									 is="#[MunitTools::equalTo('def')]"/>
			<munit-tools:assert-that expression='#[payload.*booleanItemParams[0]]'
									 is="#[MunitTools::equalTo('True')]"/>
			<munit-tools:assert-that expression='#[payload.*booleanItemParams[1]]'
									 is="#[MunitTools::equalTo('false')]"/>
			<munit-tools:assert-that expression="#[payload.*stringItemParams[0]]"
									 is="#[MunitTools::equalTo('def')]"/>
			<munit-tools:assert-that expression="#[payload.*stringItemParams[1]]"
									 is="#[MunitTools::equalTo('ault')]"/>
			<munit-tools:assert-that expression="#[payload.datetimeItemParam]"
									 is="#[MunitTools::equalTo('2016-02-28T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*datetimeItemParams[0]]"
									 is="#[MunitTools::equalTo('2016-02-28T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*datetimeItemParams[1]]"
									 is="#[MunitTools::equalTo('2018-12-18T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[0]]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[1]]"
									 is="#[MunitTools::equalTo('true')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[2]]"
									 is="#[MunitTools::equalTo('4.23')]"/>
			<munit-tools:assert-that expression="#[payload.nonStringUnionItemParam]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.numericItemParam]"
									 is="#[MunitTools::equalTo('123.456')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[0]]"
									 is="#[MunitTools::equalTo('some')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[1]]"
									 is="#[MunitTools::equalTo('default')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[2]]"
									 is="#[MunitTools::equalTo('value')]"/>
			<munit-tools:assert-that expression="#[payload.integerItemParam]"
									 is="#[MunitTools::equalTo('789')]"/>
			<munit-tools:assert-that expression="#[payload.*numericItemParams[0]]"
									 is="#[MunitTools::equalTo('123.456')]"/>
			<munit-tools:assert-that expression="#[payload.*numericItemParams[1]]"
									 is="#[MunitTools::equalTo('789.123')]"/>
			<munit-tools:assert-that expression="#[payload.*integerItemParams[0]]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.*integerItemParams[1]]"
									 is="#[MunitTools::equalTo('456')]"/>
			<munit-tools:assert-that expression="#[payload.booleanItemParam]"
									 is="#[MunitTools::equalTo('false')]"/>
			<munit-tools:assert-that expression="#[payload.unionItemParam]"
									 is="#[MunitTools::equalTo('something')]"/>
			<munit-tools:retrieve key="q-string"/>
			<munit-tools:assert-that expression="#[payload]"
									 is="#[MunitTools::equalTo('booleanItemParams=True&amp;booleanItemParams=false&amp;stringItemParam=def&amp;stringItemParams=def&amp;stringItemParams=ault&amp;datetimeItemParam=2016-02-28T16%3A41%3A41.090Z&amp;datetimeItemParams=2016-02-28T16%3A41%3A41.090Z&amp;datetimeItemParams=2018-12-18T16%3A41%3A41.090Z&amp;nonStringUnionItemParams=123&amp;nonStringUnionItemParams=true&amp;nonStringUnionItemParams=4.23&amp;nonStringUnionItemParam=123&amp;numericItemParam=123.456&amp;unionItemParams=some&amp;unionItemParams=default&amp;unionItemParams=value&amp;integerItemParam=789&amp;numericItemParams=123.456&amp;numericItemParams=789.123&amp;integerItemParams=123&amp;integerItemParams=456&amp;booleanItemParam=false&amp;unionItemParam=something')]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="query-string-default-values-passed-to-flow">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryString:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryString">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:retrieve key="q-params"/>
			<munit-tools:assert-that expression='#[payload.stringItemParam]'
									 is="#[MunitTools::equalTo('def')]"/>
			<munit-tools:assert-that expression='#[payload.*booleanItemParams[0]]'
									 is="#[MunitTools::equalTo('True')]"/>
			<munit-tools:assert-that expression='#[payload.*booleanItemParams[1]]'
									 is="#[MunitTools::equalTo('false')]"/>
			<munit-tools:assert-that expression="#[payload.*stringItemParams[0]]"
									 is="#[MunitTools::equalTo('def')]"/>
			<munit-tools:assert-that expression="#[payload.*stringItemParams[1]]"
									 is="#[MunitTools::equalTo('ault')]"/>
			<munit-tools:assert-that expression="#[payload.datetimeItemParam]"
									 is="#[MunitTools::equalTo('2016-02-28T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*datetimeItemParams[0]]"
									 is="#[MunitTools::equalTo('2016-02-28T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*datetimeItemParams[1]]"
									 is="#[MunitTools::equalTo('2018-12-18T16:41:41.090Z')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[0]]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[1]]"
									 is="#[MunitTools::equalTo('true')]"/>
			<munit-tools:assert-that expression="#[payload.*nonStringUnionItemParams[2]]"
									 is="#[MunitTools::equalTo('4.23')]"/>
			<munit-tools:assert-that expression="#[payload.nonStringUnionItemParam]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.numericItemParam]"
									 is="#[MunitTools::equalTo('123.456')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[0]]"
									 is="#[MunitTools::equalTo('some')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[1]]"
									 is="#[MunitTools::equalTo('default')]"/>
			<munit-tools:assert-that expression="#[payload.*unionItemParams[2]]"
									 is="#[MunitTools::equalTo('value')]"/>
			<munit-tools:assert-that expression="#[payload.integerItemParam]"
									 is="#[MunitTools::equalTo('789')]"/>
			<munit-tools:assert-that expression="#[payload.*numericItemParams[0]]"
									 is="#[MunitTools::equalTo('123.456')]"/>
			<munit-tools:assert-that expression="#[payload.*numericItemParams[1]]"
									 is="#[MunitTools::equalTo('789.123')]"/>
			<munit-tools:assert-that expression="#[payload.*integerItemParams[0]]"
									 is="#[MunitTools::equalTo('123')]"/>
			<munit-tools:assert-that expression="#[payload.*integerItemParams[1]]"
									 is="#[MunitTools::equalTo('456')]"/>
			<munit-tools:assert-that expression="#[payload.booleanItemParam]"
									 is="#[MunitTools::equalTo('false')]"/>
			<munit-tools:assert-that expression="#[payload.unionItemParam]"
									 is="#[MunitTools::equalTo('something')]"/>
			<munit-tools:retrieve key="q-string"/>
			<munit-tools:assert-that expression="#[payload]"
									 is="#[MunitTools::equalTo('booleanItemParams=True&amp;booleanItemParams=false&amp;stringItemParam=def&amp;stringItemParams=def&amp;stringItemParams=ault&amp;datetimeItemParam=2016-02-28T16%3A41%3A41.090Z&amp;datetimeItemParams=2016-02-28T16%3A41%3A41.090Z&amp;datetimeItemParams=2018-12-18T16%3A41%3A41.090Z&amp;nonStringUnionItemParams=123&amp;nonStringUnionItemParams=true&amp;nonStringUnionItemParams=4.23&amp;nonStringUnionItemParam=123&amp;numericItemParam=123.456&amp;unionItemParams=some&amp;unionItemParams=default&amp;unionItemParams=value&amp;integerItemParam=789&amp;numericItemParams=123.456&amp;numericItemParams=789.123&amp;integerItemParams=123&amp;integerItemParams=456&amp;booleanItemParam=false&amp;unionItemParam=something')]"/>
		</munit:validation>
	</munit:test>

	<!--
    In terms of validation, when the parameter is nullable (for RAML this is a union between nil and something else), a null value will be considered as a union's value instead of inner type's value. This is because the validator considers the weight of the outer type to be greater than that of the inner types.
    Note that a value is considered as null when it is a:
    - null Object
    - "null" String
    - null Object or "null" String as part of a single element in an array
   -->

	<munit:test name="validateNullableUnionArraysParams-QueryString">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryString:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryString?nullableUnionOfArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNullableUnionArraysParams-QueryParams">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryParams:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryParams?nullableUnionOfArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNullableUnionNullableArraysParams-QueryString">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryString:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryString?nullableUnionOfNullableArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNullableUnionNullableArraysParams-QueryParams">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryParams:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryParams?nullableUnionOfNullableArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNonNullableUnionArraysParams-QueryString">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryString:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryString?nonNullableUnionOfArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNonNullableUnionArraysParams-QueryParams">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryParams:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryParams?nonNullableUnionOfArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNonNullableUnionNullableArraysParams-QueryString">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryString:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryString?nonNullableUnionOfNullableArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

	<munit:test name="validateNonNullableUnionNullableArraysParams-QueryParams">
		<munit:enable-flow-sources>
			<munit:enable-flow-source value="query-consistent-validation-main"/>
			<munit:enable-flow-source value="get:\testQueryParams:query-consistent-validation-config"/>
		</munit:enable-flow-sources>
		<munit:execution>
			<http:request method="GET" config-ref="http-requester-simple"
						  path="/api/testQueryParams?nonNullableUnionOfNullableArraysParams">
				<http:response-validator>
					<http:success-status-code-validator values="1..500"/>
				</http:response-validator>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]"/>
		</munit:validation>
	</munit:test>

</mule>

